#include <iostream>
#include "024_head.h"
//#include "024_head2.h"
using namespace std;

// 可以不写值
//#define DEBUG 1
#define DEBUG

#define RELEASE

int main024()
{
    //.h文件可以添加到 项目中的“头文件”目录中，也可以不添加。系统不会编译头文件。

    //c语言入门教程-视频-24
    cout << "024_编译预处理_文件包含和条件编译" << endl;
    /*
        一、文件包含
            - 将另外一个文件的内容包含到本文件中，通过#include命令来实现。
            - 一般格式：#include "文件名"
                - #include 常用于 #include 其他 .h 文件。常常把宏定义，函数声明，一些其他的#include命令，以及一些全局变量之类的外部声明等，放在 头文件中。

        说明：
            1. 很多公共修改都可以放到head.h中，但是一旦修改了.h文件，也就相当于修改了#include这个头文件的.cpp文件，那么这些.cpp文件系统会对其进行重新编译。
            2. 一个#include只能包含一个文件，如果要包含多个文件，那就要写多个#include。
            3. 文件包含是可以嵌套的。一个头文件中，还可以#include其他头文件。
                - #include的本质就是把另外一个文件中的内容，搬到本文件中来。
            4. #include包含文件
                - <>：是去系统目录中找文件。所以相标准的stdio.h头文件就用<>
                - ""：是首先在当前母乳查找，如果找不到，再到系统目录中查找。""用于自己写的头文件，让系统优先使用当前目录中定义的头文件。
    */
    cout << "一、文件包含" << endl;
    printf("%d\n", PI);
    printf("%d\n", DPI);
    printf("%d\n", TDPI);
    cout << "-------------------------------------------------------" << endl;

    /*
        二、条件编译
            条件编译的几种形式
                - 形式1：当标识符被定义过，则对程序段1进行编译，否则对程序段2进行编译。#else 这部分可以没有。
                    #ifdef 标识符
                        程序段1（一堆代码）
                    #else
                        程序段2（一堆代码）
                    #endif

                - 形式2：当标识符 没有被定义过，则对程序段1进行编译，否则对程序段2进行编译。#else 这部分可以没有。
                    #ifndef 标识符
                        程序段1（一堆代码）
                    #else
                        程序段2（一堆代码）
                    #endif

                - 形式3：当指定的 表达式 的值为真（非0）时，就编对应的译程序段，如果所有条件都不成立就编译程序段3。所以，事先给定一定的条件，就可以使程序在不同条件下实现不同功能。
                    #if 表达式
                        程序段1（一堆代码）
                    #elif 表达式2
                        程序段2（一堆代码）
                    #else
                        程序段3（一堆代码）
                    #endif

            条件编译的好处
                1. 可以减少生成的.o/.obj目标文件的长度。
                2. 开发面临跨平台问题，为了增加程序的可移植性、程序的灵活性，我们就必须采用条件编译。
    */
    cout << "二、条件编译" << endl;
    cout << "条件编译-形式1" << endl;
#ifdef DEBUG
    printf("x = , y = .....\n");
#endif
    cout << "-----------" << endl;

    cout << "条件编译-形式2" << endl;
#ifndef RELEASE
    printf("打印一些调试信息！\n");
#endif
    cout << "-----------" << endl;

#if PI
    printf("PI is defined\n");
#else
    printf("PI is not defined\n");
#endif
    cout << "-----------" << endl;

#if _WIN64
    //... windows64 用
#elif __linux__
    //... linux 用
#else
    // ... 其他
#endif

    cout << "-------------------------------------------------------" << endl;

    return 0;
}